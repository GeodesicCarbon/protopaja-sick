<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__laser__objects" kind="group">
    <compoundname>laser_objects</compoundname>
    <title>Laser_objects</title>
    <innerclass refid="classlaser__objects" prot="public">laser_objects</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__laser__objects_1ga8e139bb70c4e8589e512a71f244b45ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void laser_objects::update</definition>
        <argsstring>(std::pair&lt; float, float &gt; pos_centerofmass)</argsstring>
        <name>update</name>
        <param>
          <type>std::pair&lt; float, float &gt;</type>
          <declname>pos_centerofmass</declname>
        </param>
        <briefdescription>
<para>Update a object&apos;s position and status or create new one. </para>        </briefdescription>
        <detaileddescription>
<para>If object in repository is within object_threshold then updates its position and status. Otherwise creates new object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos_centerofmass</parametername>
</parameternamelist>
<parameterdescription>
<para>a &lt;x,y&gt; coordinate pair of some CoM. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>track_objects_server </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="54" column="1" bodyfile="src/laser_objects.cpp" bodystart="201" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="group__laser__objects_1ga5d288e741d7fca610899fd1b9f822826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; laser_objects::get_mobiles_x</definition>
        <argsstring>()</argsstring>
        <name>get_mobiles_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter for the all mobiles&apos; x coordinate. <simplesect kind="return"><para>list of all mobile object&apos;s x coordinate </para></simplesect>
<simplesect kind="see"><para><ref refid="group__laser__objects_1gab76cec03e47705fcad27a2cf9d9b62a0" kindref="member">laser_objects::get_mobiles_y</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="55" column="1" bodyfile="src/laser_objects.cpp" bodystart="217" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="group__laser__objects_1gab76cec03e47705fcad27a2cf9d9b62a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; laser_objects::get_mobiles_y</definition>
        <argsstring>()</argsstring>
        <name>get_mobiles_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter for the all mobiles&apos; y coordinate. <simplesect kind="return"><para>list of all mobile object&apos;s y coordinate </para></simplesect>
<simplesect kind="see"><para><ref refid="group__laser__objects_1ga5d288e741d7fca610899fd1b9f822826" kindref="member">laser_objects::get_mobiles_x</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="56" column="1" bodyfile="src/laser_objects.cpp" bodystart="232" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__laser__objects_1ga1f4e68699b3a5ea853dce7e45123a284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; laser_objects::get_statics_x</definition>
        <argsstring>()</argsstring>
        <name>get_statics_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter for the all static&apos;s x coordinate. <simplesect kind="return"><para>list of all mobile object&apos;s x coordinate </para></simplesect>
<simplesect kind="see"><para><ref refid="group__laser__objects_1ga6063594fe030d1d8c33e6f4d2e1b3ef0" kindref="member">laser_objects::get_statics_y</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="57" column="1" bodyfile="src/laser_objects.cpp" bodystart="247" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__laser__objects_1ga6063594fe030d1d8c33e6f4d2e1b3ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; laser_objects::get_statics_y</definition>
        <argsstring>()</argsstring>
        <name>get_statics_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter for the all static&apos;s y coordinate. <simplesect kind="return"><para>list of all mobile object&apos;s y coordinate </para></simplesect>
<simplesect kind="see"><para><ref refid="group__laser__objects_1ga1f4e68699b3a5ea853dce7e45123a284" kindref="member">laser_objects::get_statics_x</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="58" column="1" bodyfile="src/laser_objects.cpp" bodystart="262" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__laser__objects_1ga8491aebb670f24305deeb85a9da26ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void laser_objects::update_repository</definition>
        <argsstring>()</argsstring>
        <name>update_repository</name>
        <briefdescription>
<para>Culls old objects from repository. </para>        </briefdescription>
        <detaileddescription>
<para>Updates repository Removes all objects that have been updated over CULLING_TIME seconds ago. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="59" column="1" bodyfile="src/laser_objects.cpp" bodystart="278" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__laser__objects_1ga9be2a1b55a49c0083bc37ac770ca2fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>laser_objects::laser_objects</definition>
        <argsstring>(float scanner_dt)</argsstring>
        <name>laser_objects</name>
        <param>
          <type>float</type>
          <declname>scanner_dt</declname>
        </param>
        <briefdescription>
<para>Constructor. Completes F model matrix with time interval. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: Implement get_mobiles_dir() </para></xrefdescription></xrefsect><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>Implemetn get_mobiles_spd() </para></xrefdescription></xrefsect></para><para>Since effect of of the velocity on the position depends on the time it takes to update, parameter dt is used to complete the model.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>time interval between updates. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/laser_objects.hpp" line="60" column="1" bodyfile="src/laser_objects.cpp" bodystart="317" bodyend="322"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
